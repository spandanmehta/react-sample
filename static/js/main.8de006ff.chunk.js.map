{"version":3,"sources":["index.js"],"names":["Square","props","className","variant","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"oQAmBA,SAASA,EAAOC,GACd,OACE,kBAAC,IAAD,CAAQC,UAAU,SAClBC,QAAQ,WACRC,QAAWH,EAAMG,SAEdH,EAAMI,O,IAKPC,E,YACJ,WAAYL,GAAO,IAAD,8BAChB,4CAAMA,KACDM,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAU,GAJI,E,yEAQNC,GACV,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAChCC,EAAgBP,IAAUA,EAAQI,KAGrCJ,EAAQI,GAAGC,KAAKN,MAAMI,QAAQ,IAAI,IAClCE,KAAKG,SAAS,CACZR,QAAUA,EACVG,SAAUE,KAAKN,MAAMI,a,mCAIZC,GAAI,IAAD,OACd,OACE,kBAACZ,EAAD,CACEK,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAK,EAAKa,YAAYL,Q,+BAMnC,IACIM,EADEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAS1C,OANEU,EADCC,EACQ,WAAYA,EAGZ,iBAAiBN,KAAKN,MAAMI,QAAQ,IAAI,KAIjD,6BACE,yBAAKT,UAAU,UAAUgB,GACzB,yBAAKhB,UAAU,aACZW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKlB,UAAU,aACZW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKlB,UAAU,aACZW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,S,GAxDTC,IAAMC,WA+DpBC,E,iLAEF,OACE,yBAAKrB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACI,EAAD,OAEF,yBAAKJ,UAAU,aACb,8BACA,mC,GATSmB,IAAMC,WAgBzB,SAASP,EAAgBP,GAWvB,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACnBY,EAAMZ,GADa,GAC9Bc,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACpE,OAAOpB,EAAQkB,GAGnB,OAAO,KAMTG,IAASC,OACP,kBAACP,EAAD,MACAQ,SAASC,eAAe,U","file":"static/js/main.8de006ff.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Button} from '@material-ui/core';\n\n\n// class Square extends React.Component {\n//   render() {\n//     return (\n//       <Button className=\"square\" \n//         variant=\"outlined\" \n//         onClick={() => this.props.onClick()} \n//       >\n//         {this.props.value}\n//       </Button>\n//     );\n//   }\n// }\n\nfunction Square(props){\n  return(\n    <Button className=\"square\"\n    variant=\"outlined\"\n    onClick = {props.onClick}\n    >\n      {props.value}\n    </Button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext : true,\n    };\n  }\n\n  handleClick(i){\n    const squares = this.state.squares.slice();\n    if(calculateWinner(squares)||squares[i]){\n      return;\n    }\n    squares[i]=this.state.xIsNext?'X':'O';\n    this.setState({\n      squares : squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  renderSquare(i) {\n    return (\n      <Square \n        value={this.state.squares[i]} \n        onClick={()=> this.handleClick(i)}\n    />\n    );\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if(winner){\n      status = 'Winner: '+ winner;\n    }\n    else{\n      status = 'Next player: '+(this.state.xIsNext?'X':'O');\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}